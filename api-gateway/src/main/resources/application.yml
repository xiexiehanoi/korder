server:
  port: 8081

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**, /auth/**
        - id: event-service
          uri: lb://EVENT-SERVICE
          predicates:
            - Path=/event/**, /auth/**
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates:
            - Path=/reservation/**
          filters:
            - RewritePath=/reservation/(?<segment>.*), /$\{segment}
            - PreserveHostHeader
        - id: purchase-service
          uri: lb://PURCHASE-SERVICE
          predicates:
            - Path=/purchase/**
  data:
    redis:
      host: localhost
      port: 6379

jwt:
  secret: 7Leo7JeF7L2U7Iqk7ZmU7J207YyF7ZW064u56rWQ7Jyh6rO87KCV7J2E64Gd64K06rOg64KY66m06ryt7Leo7JeF7ZWY7Iuk7IiY7J6I7J2E6rKB64uI64ukLg==
  accesstoken:
    expiration: 3600000
  refreshtoken:
    expiration: 1296000000

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: api-gateway  # 호스트 이름을 명확하게 설정

    logging:
      level:
        com.hanghae.apigateway: DEBUG
        org.springframework.security: DEBUG
        org.springframework.web: DEBUG