version: '3.8'

services:
  db:
    image: postgres:alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${AWS_DB_NAME}
      POSTGRES_USER: ${AWS_DB_USER}
      POSTGRES_PASSWORD: ${AWS_DB_PASSWORD}
      POSTGRES_PORT: ${AWS_DB_PORT}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis_server
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app_network

  app:
    container_name: springboot_server_dev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:6500"
    depends_on:
      - db
      - redis
    environment:
      AWS_DB_HOST: ${AWS_DB_HOST}
      AWS_DB_NAME: ${AWS_DB_NAME}
      AWS_DB_USER: ${AWS_DB_USER}
      AWS_DB_PASSWORD: ${AWS_DB_PASSWORD}
      AWS_DB_PORT: ${AWS_DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESSTOKEN_EXPIRED: ${JWT_ACCESSTOKEN_EXPIRED}
      JWT_REFRESHTOKEN_EXPIRED: ${JWT_REFRESHTOKEN_EXPIRED}
      REDIS_HOST: redis_server
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
